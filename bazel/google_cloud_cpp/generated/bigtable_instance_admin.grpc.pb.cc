// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto

#include "google/bigtable/admin/v2/bigtable_instance_admin.pb.h"
#include "google/bigtable/admin/v2/bigtable_instance_admin.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace bigtable {
namespace admin {
namespace v2 {

static const char* BigtableInstanceAdmin_method_names[] = {
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateInstance",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetInstance",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListInstances",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateInstance",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/PartialUpdateInstance",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteInstance",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateCluster",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetCluster",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListClusters",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateCluster",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteCluster",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateAppProfile",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetAppProfile",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListAppProfiles",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateAppProfile",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteAppProfile",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetIamPolicy",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/SetIamPolicy",
  "/google.bigtable.admin.v2.BigtableInstanceAdmin/TestIamPermissions",
};

std::unique_ptr< BigtableInstanceAdmin::Stub> BigtableInstanceAdmin::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< BigtableInstanceAdmin::Stub> stub(new BigtableInstanceAdmin::Stub(channel));
  return stub;
}

BigtableInstanceAdmin::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_CreateInstance_(BigtableInstanceAdmin_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetInstance_(BigtableInstanceAdmin_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListInstances_(BigtableInstanceAdmin_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateInstance_(BigtableInstanceAdmin_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_PartialUpdateInstance_(BigtableInstanceAdmin_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteInstance_(BigtableInstanceAdmin_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateCluster_(BigtableInstanceAdmin_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCluster_(BigtableInstanceAdmin_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListClusters_(BigtableInstanceAdmin_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateCluster_(BigtableInstanceAdmin_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteCluster_(BigtableInstanceAdmin_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateAppProfile_(BigtableInstanceAdmin_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetAppProfile_(BigtableInstanceAdmin_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListAppProfiles_(BigtableInstanceAdmin_method_names[13], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateAppProfile_(BigtableInstanceAdmin_method_names[14], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteAppProfile_(BigtableInstanceAdmin_method_names[15], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetIamPolicy_(BigtableInstanceAdmin_method_names[16], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetIamPolicy_(BigtableInstanceAdmin_method_names[17], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_TestIamPermissions_(BigtableInstanceAdmin_method_names[18], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status BigtableInstanceAdmin::Stub::CreateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateInstance_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::AsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateInstance_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::PrepareAsyncCreateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateInstance_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::GetInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::google::bigtable::admin::v2::Instance* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetInstance_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* BigtableInstanceAdmin::Stub::AsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Instance>::Create(channel_.get(), cq, rpcmethod_GetInstance_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* BigtableInstanceAdmin::Stub::PrepareAsyncGetInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Instance>::Create(channel_.get(), cq, rpcmethod_GetInstance_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::ListInstances(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::google::bigtable::admin::v2::ListInstancesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListInstances_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>* BigtableInstanceAdmin::Stub::AsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListInstancesResponse>::Create(channel_.get(), cq, rpcmethod_ListInstances_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListInstancesResponse>* BigtableInstanceAdmin::Stub::PrepareAsyncListInstancesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListInstancesResponse>::Create(channel_.get(), cq, rpcmethod_ListInstances_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::UpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::google::bigtable::admin::v2::Instance* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateInstance_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* BigtableInstanceAdmin::Stub::AsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Instance>::Create(channel_.get(), cq, rpcmethod_UpdateInstance_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Instance>* BigtableInstanceAdmin::Stub::PrepareAsyncUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Instance& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Instance>::Create(channel_.get(), cq, rpcmethod_UpdateInstance_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::PartialUpdateInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_PartialUpdateInstance_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::AsyncPartialUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_PartialUpdateInstance_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::PrepareAsyncPartialUpdateInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_PartialUpdateInstance_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::DeleteInstance(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteInstance_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableInstanceAdmin::Stub::AsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteInstance_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableInstanceAdmin::Stub::PrepareAsyncDeleteInstanceRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteInstance_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::CreateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateCluster_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::AsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateCluster_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::PrepareAsyncCreateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateCluster_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::GetCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::google::bigtable::admin::v2::Cluster* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetCluster_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>* BigtableInstanceAdmin::Stub::AsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Cluster>::Create(channel_.get(), cq, rpcmethod_GetCluster_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Cluster>* BigtableInstanceAdmin::Stub::PrepareAsyncGetClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetClusterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Cluster>::Create(channel_.get(), cq, rpcmethod_GetCluster_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::ListClusters(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::google::bigtable::admin::v2::ListClustersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListClusters_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>* BigtableInstanceAdmin::Stub::AsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListClustersResponse>::Create(channel_.get(), cq, rpcmethod_ListClusters_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListClustersResponse>* BigtableInstanceAdmin::Stub::PrepareAsyncListClustersRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListClustersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListClustersResponse>::Create(channel_.get(), cq, rpcmethod_ListClusters_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::UpdateCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateCluster_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::AsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_UpdateCluster_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::PrepareAsyncUpdateClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::Cluster& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_UpdateCluster_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::DeleteCluster(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteCluster_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableInstanceAdmin::Stub::AsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteCluster_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableInstanceAdmin::Stub::PrepareAsyncDeleteClusterRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteCluster_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::CreateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::google::bigtable::admin::v2::AppProfile* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateAppProfile_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>* BigtableInstanceAdmin::Stub::AsyncCreateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::AppProfile>::Create(channel_.get(), cq, rpcmethod_CreateAppProfile_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>* BigtableInstanceAdmin::Stub::PrepareAsyncCreateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::AppProfile>::Create(channel_.get(), cq, rpcmethod_CreateAppProfile_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::GetAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::google::bigtable::admin::v2::AppProfile* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetAppProfile_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>* BigtableInstanceAdmin::Stub::AsyncGetAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::AppProfile>::Create(channel_.get(), cq, rpcmethod_GetAppProfile_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::AppProfile>* BigtableInstanceAdmin::Stub::PrepareAsyncGetAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::AppProfile>::Create(channel_.get(), cq, rpcmethod_GetAppProfile_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::ListAppProfiles(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListAppProfiles_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListAppProfilesResponse>* BigtableInstanceAdmin::Stub::AsyncListAppProfilesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListAppProfilesResponse>::Create(channel_.get(), cq, rpcmethod_ListAppProfiles_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListAppProfilesResponse>* BigtableInstanceAdmin::Stub::PrepareAsyncListAppProfilesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListAppProfilesResponse>::Create(channel_.get(), cq, rpcmethod_ListAppProfiles_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::UpdateAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateAppProfile_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::AsyncUpdateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_UpdateAppProfile_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableInstanceAdmin::Stub::PrepareAsyncUpdateAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_UpdateAppProfile_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::DeleteAppProfile(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteAppProfile_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableInstanceAdmin::Stub::AsyncDeleteAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteAppProfile_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableInstanceAdmin::Stub::PrepareAsyncDeleteAppProfileRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteAppProfile_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::GetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::google::iam::v1::Policy* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetIamPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* BigtableInstanceAdmin::Stub::AsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::Policy>::Create(channel_.get(), cq, rpcmethod_GetIamPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* BigtableInstanceAdmin::Stub::PrepareAsyncGetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::GetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::Policy>::Create(channel_.get(), cq, rpcmethod_GetIamPolicy_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::SetIamPolicy(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::google::iam::v1::Policy* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SetIamPolicy_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* BigtableInstanceAdmin::Stub::AsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::Policy>::Create(channel_.get(), cq, rpcmethod_SetIamPolicy_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::Policy>* BigtableInstanceAdmin::Stub::PrepareAsyncSetIamPolicyRaw(::grpc::ClientContext* context, const ::google::iam::v1::SetIamPolicyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::Policy>::Create(channel_.get(), cq, rpcmethod_SetIamPolicy_, context, request, false);
}

::grpc::Status BigtableInstanceAdmin::Stub::TestIamPermissions(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::google::iam::v1::TestIamPermissionsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_TestIamPermissions_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* BigtableInstanceAdmin::Stub::AsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::TestIamPermissionsResponse>::Create(channel_.get(), cq, rpcmethod_TestIamPermissions_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::iam::v1::TestIamPermissionsResponse>* BigtableInstanceAdmin::Stub::PrepareAsyncTestIamPermissionsRaw(::grpc::ClientContext* context, const ::google::iam::v1::TestIamPermissionsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::iam::v1::TestIamPermissionsResponse>::Create(channel_.get(), cq, rpcmethod_TestIamPermissions_, context, request, false);
}

BigtableInstanceAdmin::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::CreateInstanceRequest, ::google::longrunning::Operation>(
          std::mem_fn(&BigtableInstanceAdmin::Service::CreateInstance), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::GetInstanceRequest, ::google::bigtable::admin::v2::Instance>(
          std::mem_fn(&BigtableInstanceAdmin::Service::GetInstance), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::ListInstancesRequest, ::google::bigtable::admin::v2::ListInstancesResponse>(
          std::mem_fn(&BigtableInstanceAdmin::Service::ListInstances), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::Instance, ::google::bigtable::admin::v2::Instance>(
          std::mem_fn(&BigtableInstanceAdmin::Service::UpdateInstance), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::PartialUpdateInstanceRequest, ::google::longrunning::Operation>(
          std::mem_fn(&BigtableInstanceAdmin::Service::PartialUpdateInstance), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::DeleteInstanceRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableInstanceAdmin::Service::DeleteInstance), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::CreateClusterRequest, ::google::longrunning::Operation>(
          std::mem_fn(&BigtableInstanceAdmin::Service::CreateCluster), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::GetClusterRequest, ::google::bigtable::admin::v2::Cluster>(
          std::mem_fn(&BigtableInstanceAdmin::Service::GetCluster), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::ListClustersRequest, ::google::bigtable::admin::v2::ListClustersResponse>(
          std::mem_fn(&BigtableInstanceAdmin::Service::ListClusters), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::Cluster, ::google::longrunning::Operation>(
          std::mem_fn(&BigtableInstanceAdmin::Service::UpdateCluster), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::DeleteClusterRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableInstanceAdmin::Service::DeleteCluster), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::CreateAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>(
          std::mem_fn(&BigtableInstanceAdmin::Service::CreateAppProfile), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::GetAppProfileRequest, ::google::bigtable::admin::v2::AppProfile>(
          std::mem_fn(&BigtableInstanceAdmin::Service::GetAppProfile), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::ListAppProfilesRequest, ::google::bigtable::admin::v2::ListAppProfilesResponse>(
          std::mem_fn(&BigtableInstanceAdmin::Service::ListAppProfiles), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::UpdateAppProfileRequest, ::google::longrunning::Operation>(
          std::mem_fn(&BigtableInstanceAdmin::Service::UpdateAppProfile), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::bigtable::admin::v2::DeleteAppProfileRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableInstanceAdmin::Service::DeleteAppProfile), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::iam::v1::GetIamPolicyRequest, ::google::iam::v1::Policy>(
          std::mem_fn(&BigtableInstanceAdmin::Service::GetIamPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::iam::v1::SetIamPolicyRequest, ::google::iam::v1::Policy>(
          std::mem_fn(&BigtableInstanceAdmin::Service::SetIamPolicy), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableInstanceAdmin_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableInstanceAdmin::Service, ::google::iam::v1::TestIamPermissionsRequest, ::google::iam::v1::TestIamPermissionsResponse>(
          std::mem_fn(&BigtableInstanceAdmin::Service::TestIamPermissions), this)));
}

BigtableInstanceAdmin::Service::~Service() {
}

::grpc::Status BigtableInstanceAdmin::Service::CreateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateInstanceRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::GetInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetInstanceRequest* request, ::google::bigtable::admin::v2::Instance* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::ListInstances(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListInstancesRequest* request, ::google::bigtable::admin::v2::ListInstancesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::UpdateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Instance* request, ::google::bigtable::admin::v2::Instance* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::PartialUpdateInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::DeleteInstance(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteInstanceRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::CreateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateClusterRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::GetCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetClusterRequest* request, ::google::bigtable::admin::v2::Cluster* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::ListClusters(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListClustersRequest* request, ::google::bigtable::admin::v2::ListClustersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::UpdateCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::Cluster* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::DeleteCluster(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteClusterRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::CreateAppProfile(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::GetAppProfile(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetAppProfileRequest* request, ::google::bigtable::admin::v2::AppProfile* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::ListAppProfiles(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListAppProfilesRequest* request, ::google::bigtable::admin::v2::ListAppProfilesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::UpdateAppProfile(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::UpdateAppProfileRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::DeleteAppProfile(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteAppProfileRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::GetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::GetIamPolicyRequest* request, ::google::iam::v1::Policy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::SetIamPolicy(::grpc::ServerContext* context, const ::google::iam::v1::SetIamPolicyRequest* request, ::google::iam::v1::Policy* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableInstanceAdmin::Service::TestIamPermissions(::grpc::ServerContext* context, const ::google::iam::v1::TestIamPermissionsRequest* request, ::google::iam::v1::TestIamPermissionsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace bigtable
}  // namespace admin
}  // namespace v2

