// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/bigtable/v2/bigtable.proto

#include "google/bigtable/v2/bigtable.pb.h"
#include "google/bigtable/v2/bigtable.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace google {
namespace bigtable {
namespace v2 {

class MockBigtableStub : public Bigtable::StubInterface {
 public:
  MOCK_METHOD2(ReadRowsRaw, ::grpc::ClientReaderInterface< ::google::bigtable::v2::ReadRowsResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::ReadRowsRequest& request));
  MOCK_METHOD4(AsyncReadRowsRaw, ::grpc::ClientAsyncReaderInterface< ::google::bigtable::v2::ReadRowsResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::ReadRowsRequest& request, ::grpc::CompletionQueue* cq, void* tag));
  MOCK_METHOD3(PrepareAsyncReadRowsRaw, ::grpc::ClientAsyncReaderInterface< ::google::bigtable::v2::ReadRowsResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::ReadRowsRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD2(SampleRowKeysRaw, ::grpc::ClientReaderInterface< ::google::bigtable::v2::SampleRowKeysResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::SampleRowKeysRequest& request));
  MOCK_METHOD4(AsyncSampleRowKeysRaw, ::grpc::ClientAsyncReaderInterface< ::google::bigtable::v2::SampleRowKeysResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::SampleRowKeysRequest& request, ::grpc::CompletionQueue* cq, void* tag));
  MOCK_METHOD3(PrepareAsyncSampleRowKeysRaw, ::grpc::ClientAsyncReaderInterface< ::google::bigtable::v2::SampleRowKeysResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::SampleRowKeysRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(MutateRow, ::grpc::Status(::grpc::ClientContext* context, const ::google::bigtable::v2::MutateRowRequest& request, ::google::bigtable::v2::MutateRowResponse* response));
  MOCK_METHOD3(AsyncMutateRowRaw, ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::v2::MutateRowResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::MutateRowRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncMutateRowRaw, ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::v2::MutateRowResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::MutateRowRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD2(MutateRowsRaw, ::grpc::ClientReaderInterface< ::google::bigtable::v2::MutateRowsResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::MutateRowsRequest& request));
  MOCK_METHOD4(AsyncMutateRowsRaw, ::grpc::ClientAsyncReaderInterface< ::google::bigtable::v2::MutateRowsResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::MutateRowsRequest& request, ::grpc::CompletionQueue* cq, void* tag));
  MOCK_METHOD3(PrepareAsyncMutateRowsRaw, ::grpc::ClientAsyncReaderInterface< ::google::bigtable::v2::MutateRowsResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::MutateRowsRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(CheckAndMutateRow, ::grpc::Status(::grpc::ClientContext* context, const ::google::bigtable::v2::CheckAndMutateRowRequest& request, ::google::bigtable::v2::CheckAndMutateRowResponse* response));
  MOCK_METHOD3(AsyncCheckAndMutateRowRaw, ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::v2::CheckAndMutateRowResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::CheckAndMutateRowRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncCheckAndMutateRowRaw, ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::v2::CheckAndMutateRowResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::CheckAndMutateRowRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(ReadModifyWriteRow, ::grpc::Status(::grpc::ClientContext* context, const ::google::bigtable::v2::ReadModifyWriteRowRequest& request, ::google::bigtable::v2::ReadModifyWriteRowResponse* response));
  MOCK_METHOD3(AsyncReadModifyWriteRowRaw, ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::v2::ReadModifyWriteRowResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::ReadModifyWriteRowRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncReadModifyWriteRowRaw, ::grpc::ClientAsyncResponseReaderInterface< ::google::bigtable::v2::ReadModifyWriteRowResponse>*(::grpc::ClientContext* context, const ::google::bigtable::v2::ReadModifyWriteRowRequest& request, ::grpc::CompletionQueue* cq));
};

} // namespace google
} // namespace bigtable
} // namespace v2

