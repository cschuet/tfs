// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: google/bigtable/admin/v2/bigtable_table_admin.proto

#include "google/bigtable/admin/v2/bigtable_table_admin.pb.h"
#include "google/bigtable/admin/v2/bigtable_table_admin.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace google {
namespace bigtable {
namespace admin {
namespace v2 {

static const char* BigtableTableAdmin_method_names[] = {
  "/google.bigtable.admin.v2.BigtableTableAdmin/CreateTable",
  "/google.bigtable.admin.v2.BigtableTableAdmin/CreateTableFromSnapshot",
  "/google.bigtable.admin.v2.BigtableTableAdmin/ListTables",
  "/google.bigtable.admin.v2.BigtableTableAdmin/GetTable",
  "/google.bigtable.admin.v2.BigtableTableAdmin/DeleteTable",
  "/google.bigtable.admin.v2.BigtableTableAdmin/ModifyColumnFamilies",
  "/google.bigtable.admin.v2.BigtableTableAdmin/DropRowRange",
  "/google.bigtable.admin.v2.BigtableTableAdmin/GenerateConsistencyToken",
  "/google.bigtable.admin.v2.BigtableTableAdmin/CheckConsistency",
  "/google.bigtable.admin.v2.BigtableTableAdmin/SnapshotTable",
  "/google.bigtable.admin.v2.BigtableTableAdmin/GetSnapshot",
  "/google.bigtable.admin.v2.BigtableTableAdmin/ListSnapshots",
  "/google.bigtable.admin.v2.BigtableTableAdmin/DeleteSnapshot",
};

std::unique_ptr< BigtableTableAdmin::Stub> BigtableTableAdmin::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< BigtableTableAdmin::Stub> stub(new BigtableTableAdmin::Stub(channel));
  return stub;
}

BigtableTableAdmin::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_CreateTable_(BigtableTableAdmin_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateTableFromSnapshot_(BigtableTableAdmin_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListTables_(BigtableTableAdmin_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetTable_(BigtableTableAdmin_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteTable_(BigtableTableAdmin_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ModifyColumnFamilies_(BigtableTableAdmin_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DropRowRange_(BigtableTableAdmin_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GenerateConsistencyToken_(BigtableTableAdmin_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CheckConsistency_(BigtableTableAdmin_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SnapshotTable_(BigtableTableAdmin_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSnapshot_(BigtableTableAdmin_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSnapshots_(BigtableTableAdmin_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteSnapshot_(BigtableTableAdmin_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status BigtableTableAdmin::Stub::CreateTable(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateTableRequest& request, ::google::bigtable::admin::v2::Table* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateTable_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Table>* BigtableTableAdmin::Stub::AsyncCreateTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Table>::Create(channel_.get(), cq, rpcmethod_CreateTable_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Table>* BigtableTableAdmin::Stub::PrepareAsyncCreateTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Table>::Create(channel_.get(), cq, rpcmethod_CreateTable_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::CreateTableFromSnapshot(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateTableFromSnapshotRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateTableFromSnapshot_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableTableAdmin::Stub::AsyncCreateTableFromSnapshotRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateTableFromSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateTableFromSnapshot_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableTableAdmin::Stub::PrepareAsyncCreateTableFromSnapshotRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CreateTableFromSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateTableFromSnapshot_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::ListTables(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListTablesRequest& request, ::google::bigtable::admin::v2::ListTablesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListTables_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListTablesResponse>* BigtableTableAdmin::Stub::AsyncListTablesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListTablesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListTablesResponse>::Create(channel_.get(), cq, rpcmethod_ListTables_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListTablesResponse>* BigtableTableAdmin::Stub::PrepareAsyncListTablesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListTablesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListTablesResponse>::Create(channel_.get(), cq, rpcmethod_ListTables_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::GetTable(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetTableRequest& request, ::google::bigtable::admin::v2::Table* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetTable_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Table>* BigtableTableAdmin::Stub::AsyncGetTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Table>::Create(channel_.get(), cq, rpcmethod_GetTable_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Table>* BigtableTableAdmin::Stub::PrepareAsyncGetTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Table>::Create(channel_.get(), cq, rpcmethod_GetTable_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::DeleteTable(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteTableRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteTable_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableAdmin::Stub::AsyncDeleteTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteTable_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableAdmin::Stub::PrepareAsyncDeleteTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteTable_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::ModifyColumnFamilies(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest& request, ::google::bigtable::admin::v2::Table* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ModifyColumnFamilies_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Table>* BigtableTableAdmin::Stub::AsyncModifyColumnFamiliesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Table>::Create(channel_.get(), cq, rpcmethod_ModifyColumnFamilies_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Table>* BigtableTableAdmin::Stub::PrepareAsyncModifyColumnFamiliesRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Table>::Create(channel_.get(), cq, rpcmethod_ModifyColumnFamilies_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::DropRowRange(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DropRowRangeRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DropRowRange_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableAdmin::Stub::AsyncDropRowRangeRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DropRowRangeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DropRowRange_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableAdmin::Stub::PrepareAsyncDropRowRangeRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DropRowRangeRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DropRowRange_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::GenerateConsistencyToken(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GenerateConsistencyTokenRequest& request, ::google::bigtable::admin::v2::GenerateConsistencyTokenResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GenerateConsistencyToken_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::GenerateConsistencyTokenResponse>* BigtableTableAdmin::Stub::AsyncGenerateConsistencyTokenRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GenerateConsistencyTokenRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::GenerateConsistencyTokenResponse>::Create(channel_.get(), cq, rpcmethod_GenerateConsistencyToken_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::GenerateConsistencyTokenResponse>* BigtableTableAdmin::Stub::PrepareAsyncGenerateConsistencyTokenRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GenerateConsistencyTokenRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::GenerateConsistencyTokenResponse>::Create(channel_.get(), cq, rpcmethod_GenerateConsistencyToken_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::CheckConsistency(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CheckConsistencyRequest& request, ::google::bigtable::admin::v2::CheckConsistencyResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CheckConsistency_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::CheckConsistencyResponse>* BigtableTableAdmin::Stub::AsyncCheckConsistencyRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CheckConsistencyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::CheckConsistencyResponse>::Create(channel_.get(), cq, rpcmethod_CheckConsistency_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::CheckConsistencyResponse>* BigtableTableAdmin::Stub::PrepareAsyncCheckConsistencyRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::CheckConsistencyRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::CheckConsistencyResponse>::Create(channel_.get(), cq, rpcmethod_CheckConsistency_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::SnapshotTable(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::SnapshotTableRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SnapshotTable_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableTableAdmin::Stub::AsyncSnapshotTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::SnapshotTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_SnapshotTable_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* BigtableTableAdmin::Stub::PrepareAsyncSnapshotTableRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::SnapshotTableRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_SnapshotTable_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::GetSnapshot(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetSnapshotRequest& request, ::google::bigtable::admin::v2::Snapshot* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetSnapshot_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Snapshot>* BigtableTableAdmin::Stub::AsyncGetSnapshotRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Snapshot>::Create(channel_.get(), cq, rpcmethod_GetSnapshot_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::Snapshot>* BigtableTableAdmin::Stub::PrepareAsyncGetSnapshotRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::GetSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::Snapshot>::Create(channel_.get(), cq, rpcmethod_GetSnapshot_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::ListSnapshots(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListSnapshotsRequest& request, ::google::bigtable::admin::v2::ListSnapshotsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListSnapshots_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListSnapshotsResponse>* BigtableTableAdmin::Stub::AsyncListSnapshotsRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListSnapshotsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListSnapshotsResponse>::Create(channel_.get(), cq, rpcmethod_ListSnapshots_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::bigtable::admin::v2::ListSnapshotsResponse>* BigtableTableAdmin::Stub::PrepareAsyncListSnapshotsRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::ListSnapshotsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::bigtable::admin::v2::ListSnapshotsResponse>::Create(channel_.get(), cq, rpcmethod_ListSnapshots_, context, request, false);
}

::grpc::Status BigtableTableAdmin::Stub::DeleteSnapshot(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteSnapshotRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteSnapshot_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableAdmin::Stub::AsyncDeleteSnapshotRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteSnapshot_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* BigtableTableAdmin::Stub::PrepareAsyncDeleteSnapshotRaw(::grpc::ClientContext* context, const ::google::bigtable::admin::v2::DeleteSnapshotRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::google::protobuf::Empty>::Create(channel_.get(), cq, rpcmethod_DeleteSnapshot_, context, request, false);
}

BigtableTableAdmin::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::CreateTableRequest, ::google::bigtable::admin::v2::Table>(
          std::mem_fn(&BigtableTableAdmin::Service::CreateTable), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::CreateTableFromSnapshotRequest, ::google::longrunning::Operation>(
          std::mem_fn(&BigtableTableAdmin::Service::CreateTableFromSnapshot), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::ListTablesRequest, ::google::bigtable::admin::v2::ListTablesResponse>(
          std::mem_fn(&BigtableTableAdmin::Service::ListTables), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::GetTableRequest, ::google::bigtable::admin::v2::Table>(
          std::mem_fn(&BigtableTableAdmin::Service::GetTable), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::DeleteTableRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableTableAdmin::Service::DeleteTable), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest, ::google::bigtable::admin::v2::Table>(
          std::mem_fn(&BigtableTableAdmin::Service::ModifyColumnFamilies), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::DropRowRangeRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableTableAdmin::Service::DropRowRange), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::GenerateConsistencyTokenRequest, ::google::bigtable::admin::v2::GenerateConsistencyTokenResponse>(
          std::mem_fn(&BigtableTableAdmin::Service::GenerateConsistencyToken), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::CheckConsistencyRequest, ::google::bigtable::admin::v2::CheckConsistencyResponse>(
          std::mem_fn(&BigtableTableAdmin::Service::CheckConsistency), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::SnapshotTableRequest, ::google::longrunning::Operation>(
          std::mem_fn(&BigtableTableAdmin::Service::SnapshotTable), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::GetSnapshotRequest, ::google::bigtable::admin::v2::Snapshot>(
          std::mem_fn(&BigtableTableAdmin::Service::GetSnapshot), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::ListSnapshotsRequest, ::google::bigtable::admin::v2::ListSnapshotsResponse>(
          std::mem_fn(&BigtableTableAdmin::Service::ListSnapshots), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      BigtableTableAdmin_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< BigtableTableAdmin::Service, ::google::bigtable::admin::v2::DeleteSnapshotRequest, ::google::protobuf::Empty>(
          std::mem_fn(&BigtableTableAdmin::Service::DeleteSnapshot), this)));
}

BigtableTableAdmin::Service::~Service() {
}

::grpc::Status BigtableTableAdmin::Service::CreateTable(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateTableRequest* request, ::google::bigtable::admin::v2::Table* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::CreateTableFromSnapshot(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CreateTableFromSnapshotRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::ListTables(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListTablesRequest* request, ::google::bigtable::admin::v2::ListTablesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::GetTable(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetTableRequest* request, ::google::bigtable::admin::v2::Table* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::DeleteTable(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteTableRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::ModifyColumnFamilies(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ModifyColumnFamiliesRequest* request, ::google::bigtable::admin::v2::Table* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::DropRowRange(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DropRowRangeRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::GenerateConsistencyToken(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GenerateConsistencyTokenRequest* request, ::google::bigtable::admin::v2::GenerateConsistencyTokenResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::CheckConsistency(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::CheckConsistencyRequest* request, ::google::bigtable::admin::v2::CheckConsistencyResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::SnapshotTable(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::SnapshotTableRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::GetSnapshot(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::GetSnapshotRequest* request, ::google::bigtable::admin::v2::Snapshot* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::ListSnapshots(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::ListSnapshotsRequest* request, ::google::bigtable::admin::v2::ListSnapshotsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status BigtableTableAdmin::Service::DeleteSnapshot(::grpc::ServerContext* context, const ::google::bigtable::admin::v2::DeleteSnapshotRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace google
}  // namespace bigtable
}  // namespace admin
}  // namespace v2

